// Code generated by mockery v2.2.1. DO NOT EDIT.

package mocks

import (
	context "context"

	model "github.com/evt/rest-api-example/model"
	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// FileContentService is an autogenerated mock type for the FileContentService type
type FileContentService struct {
	mock.Mock
}

// Download provides a mock function with given fields: _a0, _a1
func (_m *FileContentService) Download(_a0 context.Context, _a1 uuid.UUID) ([]byte, *model.DBFile, error) {
	ret := _m.Called(_a0, _a1)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID) []byte); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 *model.DBFile
	if rf, ok := ret.Get(1).(func(context.Context, uuid.UUID) *model.DBFile); ok {
		r1 = rf(_a0, _a1)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*model.DBFile)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, uuid.UUID) error); ok {
		r2 = rf(_a0, _a1)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// Upload provides a mock function with given fields: _a0, _a1, _a2
func (_m *FileContentService) Upload(_a0 context.Context, _a1 uuid.UUID, _a2 []byte) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID, []byte) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
